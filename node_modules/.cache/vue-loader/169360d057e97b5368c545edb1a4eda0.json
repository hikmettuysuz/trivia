{"remainingRequest":"/home/hikmet/Desktop/vue-git/vue1/todo/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hikmet/Desktop/vue-git/vue1/todo/src/components/Question.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/hikmet/Desktop/vue-git/vue1/todo/src/components/Question.vue","mtime":1581081697949},{"path":"/home/hikmet/Desktop/vue-git/vue1/todo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hikmet/Desktop/vue-git/vue1/todo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hikmet/Desktop/vue-git/vue1/todo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hikmet/Desktop/vue-git/vue1/todo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgpleHBvcnQgZGVmYXVsdCB7CiAgICBwcm9wczp7CiAgICAgICAgY3VycmVudFF1ZXN0aW9uOiBPYmplY3QsCiAgICAgICAgbmV4dDogRnVuY3Rpb24sCiAgICAgICAgcHJldmlvdXM6IEZ1bmN0aW9uCiAgICB9LAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBzZWxlY3RlZEluZGV4OiBudWxsLAogICAgICAgICAgICBjb3JyZWN0SW5kZXg6IG51bGwKICAgICAgICB9CiAgICB9LAogICAgd2F0Y2g6ewogICAgICAgIGN1cnJlbnRRdWVzdGlvbjogewogICAgICAgICAgICBpbW1lZGlhdGU6IHRydWUsCiAgICAgICAgICAgIGhhbmRsZXIoKXsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkSW5kZXggPSBudWxsCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaHVmZmxlTWV0aG9kKCkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICAgIGFuc3dlcnMoKXsKICAgICAgICAgICAgbGV0IGFuc3dlcnMgPSBbXTsKICAgICAgICAgICAgZm9yKGxldCBpID0gMCA7IGkgPCB0aGlzLmN1cnJlbnRRdWVzdGlvbi5pbmNvcnJlY3RfYW5zd2Vycy5sZW5ndGggIDsgaSsrKXsKICAgICAgICAgICAgICAgIGFuc3dlcnMucHVzaCh0aGlzLmN1cnJlbnRRdWVzdGlvbi5pbmNvcnJlY3RfYW5zd2Vyc1tpXSkKICAgICAgICAgICAgfQogICAgICAgICAgICBhbnN3ZXJzLnB1c2godGhpcy5jdXJyZW50UXVlc3Rpb24uY29ycmVjdF9hbnN3ZXIpOwogICAgICAgICAgICByZXR1cm4gYW5zd2VyczsKICAgICAgICB9CiAgICB9LAogICAgbW91bnRlZCgpIHsKICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmN1cnJlbnRRdWVzdGlvbikKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgc2VsZWN0QW5zd2VyKGluZGV4KXsKICAgICAgICAgICAgdGhpcy5zZWxlY3RlZEluZGV4ID0gaW5kZXg7CgogICAgICAgIH0sCiAgICAgICAgc2h1ZmZsZU1ldGhvZCgpewogICAgICAgICAgICB0aGlzLmNvcnJlY3RJbmRleCA9IHRoaXMuc2VsZWN0ZWRJbmRleC4KICAgICAgICB9LAogICAgICAgIHN1Ym1pdEFuc3dlcigpewogICAgICAgICAgICBpZih0aGlzLnNlbGVjdGVkSW5kZXggPT09IHRoaXMuY29ycmVjdEluZGV4KXsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdkb2dydScpCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["Question.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Question.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\n    <div class=\"question-box-container\">\n        <b-jumbotron>\n            <template v-slot:lead>\n                 {{currentQuestion.question}}\n            </template>\n            <b-list-group>\n                <b-list-group-item v-for=\"(answer,index) in answers\" :key=\"index\" @click=\"selectAnswer(index)\" :class=\"[selectedIndex===index ? 'selected':'']\">\n                    {{answer}}\n                </b-list-group-item>\n            </b-list-group>\n            <b-button @click=\"previous\" variant=\"primary\" href=\"#\">Previous</b-button>\n            <b-button @click=\"next\" variant=\"success\" href=\"#\">Next</b-button>\n            <b-button @click=\"submitAnswer\" variant=\"xss\" href=\"#\">Submit</b-button>\n\n        </b-jumbotron>\n    </div>\n</template>\n\n<script>\n\n    export default {\n        props:{\n            currentQuestion: Object,\n            next: Function,\n            previous: Function\n        },\n        data() {\n            return {\n                selectedIndex: null,\n                correctIndex: null\n            }\n        },\n        watch:{\n            currentQuestion: {\n                immediate: true,\n                handler(){\n                    {\n                        this.selectedIndex = null\n                        this.shuffleMethod()\n                    }\n                }\n            }\n        },\n        computed: {\n            answers(){\n                let answers = [];\n                for(let i = 0 ; i < this.currentQuestion.incorrect_answers.length  ; i++){\n                    answers.push(this.currentQuestion.incorrect_answers[i])\n                }\n                answers.push(this.currentQuestion.correct_answer);\n                return answers;\n            }\n        },\n        mounted() {\n            console.log(this.currentQuestion)\n        },\n        methods: {\n            selectAnswer(index){\n                this.selectedIndex = index;\n\n            },\n            shuffleMethod(){\n                this.correctIndex = this.selectedIndex.\n            },\n            submitAnswer(){\n                if(this.selectedIndex === this.correctIndex){\n                    console.log('dogru')\n                }\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\n    .selected{\n        background-color: cadetblue;\n    }\n</style>"]}]}